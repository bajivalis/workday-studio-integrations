<?xml version="1.0" encoding="UTF-8"?>
<beans
     xmlns="http://www.springframework.org/schema/beans"
     xmlns:beans="http://www.springframework.org/schema/beans"
     xmlns:atom="http://www.w3.org/2005/Atom"
     xmlns:cc="http://www.capeclear.com/assembly/10"
     xmlns:cloud="urn:com.workday/esb/cloud/10.0"
     xmlns:env="http://schemas.xmlsoap.org/soap/envelope/"
     xmlns:pi="urn:com.workday/picof"
     xmlns:wd="urn:com.workday/bsvc"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
 
	<cc:assembly id="WorkdayAssembly" version="20">
        <cc:local-out id="CallPutIntegrationEvent" endpoint="vm://wcc/PutIntegrationEvent">
            <cc:set name="is.event.completed"/>
        </cc:local-out>
        <cc:local-out id="CriticalError" store-message="both" routes-response-to="CallPutIntegrationEvent" endpoint="vm://wcc/PutIntegrationMessage">
            <cc:set name="is.message.severity" value="'CRITICAL'"/>
            <cc:set name="is.message.summary" value="'A Critical unhandled error occurred which prevented successful completion: ' + context.errorMessage"/>
            <cc:set name="is.message.detail" value="'A Critical unhandled error occurred which prevented successful completion: ' + context.errorMessage"/>
        </cc:local-out>
        <cc:send-error id="GlobalHandler" rethrow-error="false" routes-to="CriticalError"/>
        <cc:workday-in id="In" routes-to="AsyncMediation">
            <cc:integration-system name="INT ASPCA Billing Inbound">
        <cloud:attribute-map-service name="ASPCA Attribute  Service">
          <cloud:attribute name="Benefit Plan">
            <cloud:type>
              <cloud:class-report-field description="Benefit Plan" type="WID" singular="true">3b9a67c783724ef68beb2bfa1b9bf6ae</cloud:class-report-field>
            </cloud:type>
          </cloud:attribute>
          <cloud:attribute name="Benefit Event">
            <cloud:type>
              <cloud:class-report-field description="Benefit Life Event Type" type="WID" singular="false">5b59af5850fd487f95c1ed72d88834cc</cloud:class-report-field>
            </cloud:type>
          </cloud:attribute>
        </cloud:attribute-map-service>
        <cloud:retrieval-service name="ASPCA Retrieval Service"/>
        <cloud:report-service name="ASPCA Report Service">
          <cloud:report-alias description="RPT ASPCA Billing Inbound" name="RPT ASPCA Billing Inbound">
            <cloud:report-reference description="RPT ASPCA Billing Inbound" type="WID">4051d1d3026a10563a21f0e0c2133cdc</cloud:report-reference>
          </cloud:report-alias>
        </cloud:report-service>
      </cc:integration-system>
        </cc:workday-in>
        <cc:async-mediation id="AsyncMediation" routes-to="CheckRetrievedDocuments">
            <cc:steps>
                <cc:eval id="SetVars"><cc:expression>props['benefit_plan'] = intsys.getAttribute('Benefit Plan')</cc:expression><cc:expression>props['benefit_event'] = intsys.getAttributeReferenceData('Benefit Event', 'Benefit_Event_Type_ID')</cc:expression><cc:expression>props['benefit_plan_id'] = intsys.getAttributeReferenceData('Benefit Plan', 'Additional_Benefits_Plan_ID')</cc:expression></cc:eval>
            </cc:steps>
        </cc:async-mediation>
        <cc:local-out id="LogNoDocsRetrievedMessage" store-message="both" endpoint="vm://wcc/PutIntegrationMessage">
            <cc:set name="is.message.severity" value="'INFO'"/>
            <cc:set name="is.message.summary" value="'No Documents Retrieved for processing'"/>
            <cc:set name="is.message.detail" value="'No Documents Retrieved for processing'"/>
        </cc:local-out>
        <cc:async-mediation id="LogNoDocsRetrieved" routes-to="LogNoDocsRetrievedMessage">
            <cc:steps>
                <cc:log id="Log" level="warn">
                    <cc:log-message>
                        <cc:text>Retrieval service did not retrieve any documents.  Aborting file processing.</cc:text>
                    </cc:log-message>
                </cc:log>
            </cc:steps>
        </cc:async-mediation>
        <cc:route id="RouteDocuments">
            <cc:doc-iterator/>
            <cc:sub-route name="ProcessFile" routes-to="CallProcessFile"/>
        </cc:route>
        <cc:route id="CheckRetrievedDocuments">
            <cc:mvel-strategy>
                <cc:choose-route expression="da.size() > 0" route="DocumentsRetrieved"/>
                <cc:choose-route expression="true" route="NoDocumentsRetrieved"/>
            </cc:mvel-strategy>
            <cc:sub-route name="DocumentsRetrieved" routes-to="WorkdayOutRest"/>
            <cc:sub-route name="NoDocumentsRetrieved" routes-to="LogNoDocsRetrieved"/>
        </cc:route>
        <cc:splitter id="SplitRecords">
            <cc:sub-route name="Process" routes-to="CallProcessEmpl"/>
            <cc:xml-stream-splitter namespaces="ns0 http://meteorix.com/textschema/INT-ASPCA_Billing_Inbound/convertFile2Xml.xsd" xpath="/ns0:Data/Row"/>
        </cc:splitter>
        <cc:local-out id="ErrorInTextToXMLStep" endpoint="vm://wcc/PutIntegrationMessage">
            <cc:set name="is.message.severity" value="'CRITICAL'"/>
            <cc:set name="is.message.summary" value="'Error Occurred while converting the full file to XML'"/>
            <cc:set name="is.message.detail" value="'Error Occurred while converting thefull file to XML' + 'Reason: ' +  context.getErrorMessage()"/>
        </cc:local-out>
        <cc:async-mediation id="ConvertText2XML" routes-to="SplitRecords" handle-downstream-errors="true">
            <cc:steps>
                <cc:textschema id="ConvertRecords" input="variable" input-variable="wd.retrieve.variable" style="text2xml" url="convertFile2Xml.xsd"/>
                <cc:log id="LogOutput">
                    <cc:log-message>
                        <cc:text>Records in File:&#xD;
</cc:text>
                        <cc:message-content/>
                    </cc:log-message>
                </cc:log>
            </cc:steps>
            <cc:send-error id="SendError" rethrow-error="false" routes-to="ErrorInTextToXMLStep"/>
        </cc:async-mediation>
        <cc:local-in id="ProcessFile" routes-to="ConvertText2XML"/>
        <cc:local-out id="CallProcessFile" store-message="none" endpoint="vm://INT-ASPCA_Billing_Inbound/ProcessFile"/>
        <cc:local-out id="CallProcessEmpl" store-message="none" execute-when="parts[0].xpath(&quot;/Row/Row_Type&quot;) == &quot;02&quot;" endpoint="vm://INT-ASPCA_Billing_Inbound/ProcessEmpl"/>
        <cc:local-in id="ProcessEmpl" routes-to="SetFileProps"/>
        <cc:async-mediation id="SetFileProps" routes-to="CallGetIndvRate">
            <cc:steps>
                <cc:eval id="Eval"><cc:expression>props['first_name'] = parts[0].xpath(&quot;/Row/First_Name&quot;)</cc:expression><cc:expression>props['last_name'] = parts[0].xpath(&quot;/Row/Last_Name&quot;)</cc:expression><cc:expression>props['empl_id'] = parts[0].xpath(&quot;/Row/Empl_ID&quot;)</cc:expression><cc:expression>props['status'] = parts[0].xpath(&quot;/Row/Status&quot;)</cc:expression><cc:expression>props['code'] = parts[0].xpath(&quot;/Row/Code&quot;)</cc:expression><cc:expression>props['period_end_date'] = parts[0].xpath(&quot;/Row/Period_End&quot;)</cc:expression><cc:expression>props['ee_contrib'] = parts[0].xpath(&quot;/Row/Empl_Contribution&quot;)</cc:expression><cc:expression>props['er_contrib'] = parts[0].xpath(&quot;/Row/Employer_Contribution&quot;)</cc:expression><cc:expression>props['pretax'] = parts[0].xpath(&quot;/Row/Pre_Tax&quot;) == &quot;1&quot; ? true : false</cc:expression><cc:expression>props['num_pay_periods'] = vars['pay_periods'].xpath(&quot;/wd:Report_Data/wd:Report_Entry[wd:Employee_ID='&quot; + props['empl_id'] + &quot;']/wd:Number_of_Pay_Periods&quot;)</cc:expression><cc:expression>props['ee_contrib'] = com.workday.util.RoundUtil.roundTwo((double)props['ee_contrib' ] * (double)props['num_pay_periods'] / 12.0)</cc:expression></cc:eval>
                <cc:validate-exp id="ValidateExp"><cc:expression failure-message="'Employee ID not on file'">props['empl_id'] != ''</cc:expression><cc:expression failure-message="'No period end date on file'">props['period_end_date'] != ''</cc:expression></cc:validate-exp>
            </cc:steps>
            <cc:send-error id="SendError" routes-to="ErrorInFileProps"/>
        </cc:async-mediation>
        <cc:local-out id="ErrorInFileProps" endpoint="vm://wcc/PutIntegrationMessage">
            <cc:set name="is.message.severity" value="'ERROR'"/>
            <cc:set name="is.message.summary" value="'An error occured setting employee parameters from input file'"/>
            <cc:set name="is.message.detail" value="context.errorMessage"/>
        </cc:local-out>
        <cc:async-mediation id="SetIndvRateProps" routes-to="RouteAction">
            <cc:steps>
                <cc:copy id="Copy" input="soapbody"/>
                <cc:eval id="Eval"><cc:expression>props['current_indiv_rate_id'] = parts[0].xpath(&quot;/wd:Get_Benefit_Individual_Rates_Response/wd:Response_Data/wd:Benefit_Individual_Rate[contains(wd:Benefit_Individual_Rate_Reference/@wd:Descriptor, '&quot; + props['benefit_plan'] + &quot;')]/wd:Benefit_Individual_Rate_Data/wd:Benefit_Individual_Rate_ID&quot;)</cc:expression><cc:expression>props['current_ee_contrib'] = parts[0].xpath(&quot;/wd:Get_Benefit_Individual_Rates_Response/wd:Response_Data/wd:Benefit_Individual_Rate[contains(wd:Benefit_Individual_Rate_Reference/@wd:Descriptor, '&quot; + props['benefit_plan'] + &quot;')]/wd:Benefit_Individual_Rate_Data/wd:Employee_PostTax_Amount&quot;)</cc:expression></cc:eval>
            </cc:steps>
        </cc:async-mediation>
        <cc:route id="RouteAction">
            <cc:mvel-strategy>
                <cc:choose-route expression="props['status'] == 'A' &amp;&amp; props['current_indiv_rate_id'] == ''" route="Add"/>
                <cc:choose-route expression="props['ee_contrib'].toString() != props['current_ee_contrib']" route="Update"/>
                <cc:choose-route expression="props['status'] == 'C'" route="Cancel"/>
                <cc:choose-route expression="true" route="NoChange"/>
            </cc:mvel-strategy>
            <cc:sub-route name="Add" routes-to="CallAdd"/>
            <cc:sub-route name="Update" routes-to="CallUpdate"/>
            <cc:sub-route name="Cancel" routes-to="CallCancel"/>
            <cc:sub-route name="NoChange" routes-to="PutNoChangeMessage"/>
        </cc:route>
        <cc:local-out id="CallAdd" store-message="none" endpoint="vm://INT-ASPCA_Billing_Inbound/Add"/>
        <cc:local-out id="CallCancel" store-message="none" endpoint="vm://INT-ASPCA_Billing_Inbound/Cancel"/>
        <cc:local-out id="PutNoChangeMessage" endpoint="vm://wcc/PutIntegrationMessage"><cc:set name="is.message.severity" value="'INFO'"/><cc:set name="is.message.summary" value="'No change for employee ' + props['empl_id'] + ' - ' + props['first_name'] + ' ' + props['last_name']"/><cc:set name="is.message.detail" value="'No change for employee ' + props['empl_id'] + ' - ' + props['first_name'] + ' ' + props['last_name']"/></cc:local-out>
        <cc:local-in id="Add" routes-to="CreatChgBenefits"/>
        <cc:local-in id="Cancel" routes-to="CreateCxlBenefit"/>
        <cc:async-mediation id="CreatChgBenefits" routes-to="ChangeBenefits" handle-downstream-errors="true">
            <cc:steps>
                <cc:xslt id="Xslt" url="Create_Change_Benefits.xsl"/>
            </cc:steps>
            <cc:send-error id="SendError" routes-to="ErrorChgBenefits"/>
        </cc:async-mediation>
        <cc:local-out id="ErrorChgBenefits" endpoint="vm://wcc/PutIntegrationMessage">
            <cc:set name="is.message.severity" value="'ERROR'"/>
            <cc:set name="is.message.summary" value="'An error occured enrolling in the benefit plan'"/>
            <cc:set name="is.message.detail" value="context.errorMessage"/>
        </cc:local-out>
        <cc:workday-out-soap id="ChangeBenefits" routes-response-to="CallGetIndvRate1" application="Benefits_Administration" version="24.1"/>
        <cc:workday-out-soap id="GetIndvRates" application="Benefits_Administration" version="24.1"/>
        <cc:async-mediation id="CreateGetIndvRates" routes-to="GetIndvRates" handle-downstream-errors="true">
            <cc:steps>
                <cc:write id="Write">
                    <cc:message>
                        <cc:text>&lt;env:Envelope&#xD;
    xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot;&#xD;
    xmlns:env=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&#xD;
    xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;>&#xD;
    &lt;env:Body>&#xD;
        &lt;wd:Get_Benefit_Individual_Rates_Request&#xD;
            xmlns:wd=&quot;urn:com.workday/bsvc&quot;&#xD;
            wd:version=&quot;v24.1&quot;>&#xD;
            &lt;wd:Request_Criteria>&#xD;
                &lt;wd:Worker_Reference>&#xD;
                    &lt;wd:ID wd:type=&quot;Employee_ID&quot;>@{props['empl_id']}&lt;/wd:ID>&#xD;
                &lt;/wd:Worker_Reference>&#xD;
            &lt;/wd:Request_Criteria>&#xD;
        &lt;/wd:Get_Benefit_Individual_Rates_Request>&#xD;
    &lt;/env:Body>&#xD;
 &lt;/env:Envelope></cc:text>
                    </cc:message>
                </cc:write>
                <cc:log id="Log">
                    <cc:log-message>
                        <cc:message-content/>
                    </cc:log-message>
                </cc:log>
            </cc:steps>
            <cc:send-error id="SendError" routes-to="UpdateErrorMessage"/>
        </cc:async-mediation>
        <cc:local-in id="GetIndvRate" routes-to="CreateGetIndvRates"/>
        <cc:local-out id="CallGetIndvRate" store-message="none" routes-response-to="SetIndvRateProps" endpoint="vm://INT-ASPCA_Billing_Inbound/GetIndvRate"/>
        <cc:local-out id="UpdateErrorMessage" endpoint="vm://wcc/PutIntegrationMessage">
            <cc:set name="is.message.severity" value="'ERROR'"/>
            <cc:set name="is.message.summary" value="'Problem getting individual rate for employee ' + props['empl_id']"/>
            <cc:set name="is.message.detail" value="'Problem getting individual rate for employee ' + props['empl_id'] + '. Reason: ' + context.getErrorMessage()"/>
        </cc:local-out>
        <cc:local-out id="CallGetIndvRate1" store-message="none" routes-response-to="SetProps" endpoint="vm://INT-ASPCA_Billing_Inbound/GetIndvRate"/>
        <cc:async-mediation id="SetProps" routes-to="CreatePutIndvRate" handle-downstream-errors="true">
            <cc:steps>
                <cc:copy id="Copy" input="soapbody"/>
                <cc:eval id="Eval"><cc:expression>props['current_indiv_rate_id'] = props['current_indiv_rate_id'] == '' ? parts[0].xpath(&quot;/wd:Get_Benefit_Individual_Rates_Response/wd:Response_Data/wd:Benefit_Individual_Rate[contains(wd:Benefit_Individual_Rate_Reference/@wd:Descriptor, '&quot; + props['benefit_plan'] + &quot;')]/wd:Benefit_Individual_Rate_Data/wd:Benefit_Individual_Rate_ID&quot;) : props['current_indiv_rate_id']</cc:expression></cc:eval>
            </cc:steps>
            <cc:send-error id="SendError" routes-to="ErrorIndvRate"/>
        </cc:async-mediation>
        <cc:local-out id="ErrorIndvRate" endpoint="vm://wcc/PutIntegrationMessage">
            <cc:set name="is.message.severity" value="'ERROR'"/>
            <cc:set name="is.message.summary" value="'An error occured setting the individual rate'"/>
            <cc:set name="is.message.detail" value="context.errorMessage"/>
        </cc:local-out>
        <cc:workday-out-soap id="PutIndivRate" application="Benefits_Administration" version="24.1"/>
        <cc:async-mediation id="CreateCxlBenefit" routes-to="CxlBenefits" handle-downstream-errors="true">
            <cc:steps>
                <cc:xslt id="Xslt" url="Create_Cancel_Benefit.xsl"/>
            </cc:steps>
            <cc:send-error id="SendError" routes-to="ErrorCxBenefits"/>
        </cc:async-mediation>
        <cc:local-out id="ErrorCxBenefits" endpoint="vm://wcc/PutIntegrationMessage">
            <cc:set name="is.message.severity" value="'ERROR'"/>
            <cc:set name="is.message.summary" value="'An error occured cancelling the benefit plan'"/>
            <cc:set name="is.message.detail" value="context.errorMessage"/>
        </cc:local-out>
        <cc:async-mediation id="CreatePutIndvRate" routes-to="PutIndivRate">
            <cc:steps>
                <cc:xslt id="Xslt" url="Create_Put_Individual_Rate.xsl"/></cc:steps>
        </cc:async-mediation>
        <cc:local-out id="CallUpdate" store-message="none" endpoint="vm://INT-ASPCA_Billing_Inbound/Update"/>
        <cc:local-in id="Update" routes-to="CreatePutIndvRate"/>
        <cc:workday-out-soap id="CxlBenefits" application="Benefits_Administration" version="24.1"/>
        <cc:workday-out-rest id="WorkdayOutRest" routes-response-to="CopyToVar" extra-path="@{intsys.reportService.getExtrapath('RPT ASPCA Billing Inbound')}"/>
        <cc:async-mediation id="CopyToVar" routes-to="RouteDocuments">
            <cc:steps>
                <cc:copy id="Copy" output="variable" output-variable="pay_periods"/>
            </cc:steps>
        </cc:async-mediation>
	</cc:assembly>

</beans>